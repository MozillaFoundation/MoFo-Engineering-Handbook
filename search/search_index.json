{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Welcome to the Mozilla Foundation engineering handbook . This is a living document. Our active repositories foundation.mozilla.org , the home of https://foundation.mozilla.org donate-wagtail , the home of https://donate.mozilla.org network-pulse , the home of https://mozillapulse.org network-pulse-api , the home of https://api.mozillapulse.org Tech stacks Backend technologies Frontend technologoes CI/CD Playbooks We use these playbooks as guides for planning and tracking work. General sprint playbook used to plan regular sprints Dedicated project playbook used to plan projects around specific work that will take up their own (one or more) sprint(s) Notes :warning: This document is still being developed :warning:","title":"Introduction"},{"location":"#introduction","text":"Welcome to the Mozilla Foundation engineering handbook . This is a living document.","title":"Introduction"},{"location":"#our-active-repositories","text":"foundation.mozilla.org , the home of https://foundation.mozilla.org donate-wagtail , the home of https://donate.mozilla.org network-pulse , the home of https://mozillapulse.org network-pulse-api , the home of https://api.mozillapulse.org","title":"Our active repositories"},{"location":"#tech-stacks","text":"Backend technologies Frontend technologoes CI/CD","title":"Tech stacks"},{"location":"#playbooks","text":"We use these playbooks as guides for planning and tracking work. General sprint playbook used to plan regular sprints Dedicated project playbook used to plan projects around specific work that will take up their own (one or more) sprint(s)","title":"Playbooks"},{"location":"#notes","text":":warning: This document is still being developed :warning:","title":"Notes"},{"location":"playbooks/projects/","text":"How we plan large projects Projects that take 1 or more sprints require: (stakeholder) Project outline submitted to Airtable (stakeholder, engineering) Someone from the Engagement team and someone with knowledge of the system affected conducting a stakeholder interview (stakeholder, engineering) Assigning a dedicated slack channel for all participants to join, to ensure common knowledge (engineering) The project is tracked by way of an initial spike to determine all the work involved, (engineering) Implementation plan from the spike is turned into concrete tasks, with issues filed for each task, and each issue's load estimated in terms of rough hours required to do the work. (engineering) We set up a feature branch for the work so that development doesn't hold up, or potentially break, the live site, with a dedicated heroku app so that we auto-deploy feature branch work. (engineering) Three deadlines are established: (engineering) confidence deadline (optional): which is used to guage whether the internal deadline can be met. There should always be enough time between the confidence deadline and internal deadline that a decision to postpone can safely be made. (engineering) internal deadline: a soft-launch date, by which all the work is done (stakeholder, engineering) diamond deadline: the public facing deadline for when the work is live and ready for users","title":"How we plan large projects"},{"location":"playbooks/projects/#how-we-plan-large-projects","text":"Projects that take 1 or more sprints require: (stakeholder) Project outline submitted to Airtable (stakeholder, engineering) Someone from the Engagement team and someone with knowledge of the system affected conducting a stakeholder interview (stakeholder, engineering) Assigning a dedicated slack channel for all participants to join, to ensure common knowledge (engineering) The project is tracked by way of an initial spike to determine all the work involved, (engineering) Implementation plan from the spike is turned into concrete tasks, with issues filed for each task, and each issue's load estimated in terms of rough hours required to do the work. (engineering) We set up a feature branch for the work so that development doesn't hold up, or potentially break, the live site, with a dedicated heroku app so that we auto-deploy feature branch work. (engineering) Three deadlines are established: (engineering) confidence deadline (optional): which is used to guage whether the internal deadline can be met. There should always be enough time between the confidence deadline and internal deadline that a decision to postpone can safely be made. (engineering) internal deadline: a soft-launch date, by which all the work is done (stakeholder, engineering) diamond deadline: the public facing deadline for when the work is live and ready for users","title":"How we plan large projects"},{"location":"playbooks/sprints/","text":"How we plan regular sprints Our sprints take 2 weeks, starting with sprint planning on tuesdays the monday before sprint planning has a sprint retrospective. sprint planning any outstanding work from last sprint gets moved to new sprint last sprint's stretch goals are evaluated and either moved into the new sprint or pushed out sprints are a mix of new work and maintenance/tech debt","title":"How we plan regular sprints"},{"location":"playbooks/sprints/#how-we-plan-regular-sprints","text":"Our sprints take 2 weeks, starting with sprint planning on tuesdays the monday before sprint planning has a sprint retrospective.","title":"How we plan regular sprints"},{"location":"playbooks/sprints/#sprint-planning","text":"any outstanding work from last sprint gets moved to new sprint last sprint's stretch goals are evaluated and either moved into the new sprint or pushed out sprints are a mix of new work and maintenance/tech debt","title":"sprint planning"},{"location":"tech/backend/","text":"Backend technologies used in our repos foundation.mozilla.org and mozillafestival.org Docker for abstraction as a replacement for virtual environments. Docker and Docker Compose are actively used. Invoke for managing tasks inside of Docker such as running migrations. Python as the preferred backend language. Python is installed when you run the Invoke command: inv new-env Django Web Framework as the backend framework. Django is installed when you run the Invoke command: inv new-env . Wagtail CMS as the content management system. Wagtail is installed when you run the Invoke command: inv new-env","title":"Backend technologies used in our repos"},{"location":"tech/backend/#backend-technologies-used-in-our-repos","text":"","title":"Backend technologies used in our repos"},{"location":"tech/backend/#foundationmozillaorg-and-mozillafestivalorg","text":"Docker for abstraction as a replacement for virtual environments. Docker and Docker Compose are actively used. Invoke for managing tasks inside of Docker such as running migrations. Python as the preferred backend language. Python is installed when you run the Invoke command: inv new-env Django Web Framework as the backend framework. Django is installed when you run the Invoke command: inv new-env . Wagtail CMS as the content management system. Wagtail is installed when you run the Invoke command: inv new-env","title":"foundation.mozilla.org and mozillafestival.org"},{"location":"tech/ci-cd/","text":"Continuous Integration and Continuous Development CI: github actions ...txt goes here... notes: third party github actions must be requested by filing a bugzilla bug, see the ticket template here . CD: Heroku ...txt goes here... notes: ...","title":"Continuous Integration and Continuous Development"},{"location":"tech/ci-cd/#continuous-integration-and-continuous-development","text":"","title":"Continuous Integration and Continuous Development"},{"location":"tech/ci-cd/#ci-github-actions","text":"...txt goes here... notes: third party github actions must be requested by filing a bugzilla bug, see the ticket template here .","title":"CI: github actions"},{"location":"tech/ci-cd/#cd-heroku","text":"...txt goes here... notes: ...","title":"CD: Heroku"},{"location":"tech/frontend/","text":"Frontend technologies used in our repos foundation.mozilla.org and mozillafestival.org Note: Each of these are installed inside of your Docker container. esbuild for compiling SASS and JavaScript as a faster replacement for webpack Prettier for frontend code formatting Bootstrap as the frontend framework React.js and jQuery for writing JavaScript SASS for writing maintainable CSS","title":"Frontend technologies used in our repos"},{"location":"tech/frontend/#frontend-technologies-used-in-our-repos","text":"","title":"Frontend technologies used in our repos"},{"location":"tech/frontend/#foundationmozillaorg-and-mozillafestivalorg","text":"Note: Each of these are installed inside of your Docker container. esbuild for compiling SASS and JavaScript as a faster replacement for webpack Prettier for frontend code formatting Bootstrap as the frontend framework React.js and jQuery for writing JavaScript SASS for writing maintainable CSS","title":"foundation.mozilla.org and mozillafestival.org"}]}